<div class="tier-list-wrapper">
  <div class="tier-list-container">
    <div class="action-buttons">
      <button id="upload-file-button" class="upload-button">
        <i class="fas fa-upload"></i> Choose File
      </button>
      <input type="file" id="upload-file" accept="image/*" multiple style="display:none;" />
      <button id="reset-tier-list" class="action-button">
        <i class="fas fa-undo"></i> Reset
      </button>
      <button id="download-tier-list" class="action-button">
        <i class="fas fa-download"></i> Download
      </button>
    </div>
    <p style="font-style: italic; font-size: 14px; color: #F7FAFC; margin-top: 8px;">
      Upload your file or image for the tier list. Note: Images are not saved on our website and will only appear in your download.
    </p>

    <!-- Image Pool: Where uploaded images will appear first -->
    <div id="image-pool" class="image-pool">
      <h2>Image Pool</h2>
      <div class="tier-images"></div>
    </div>

    <!-- Tier List -->
    <div class="tier-list">
      <!-- S Tier -->
      <div class="tier" data-tier="S">
        <h2 class="tier-label">S–Tier</h2>
        <div class="tier-images"></div>
      </div>
      <!-- A Tier -->
      <div class="tier" data-tier="A">
        <h2 class="tier-label">A–Tier</h2>
        <div class="tier-images"></div>
      </div>
      <!-- B Tier -->
      <div class="tier" data-tier="B">
        <h2 class="tier-label">B–Tier</h2>
        <div class="tier-images"></div>
      </div>
      <!-- C Tier -->
      <div class="tier" data-tier="C">
        <h2 class="tier-label">C–Tier</h2>
        <div class="tier-images"></div>
      </div>
      <!-- D Tier -->
      <div class="tier" data-tier="D">
        <h2 class="tier-label">D–Tier</h2>
        <div class="tier-images"></div>
      </div>
      <!-- F Tier -->
      <div class="tier" data-tier="F">
        <h2 class="tier-label">F–Tier</h2>
        <div class="tier-images"></div>
      </div>
    </div>
    <p id="save-status"></p>
  </div>
</div>

<style>
  /* Scoped CSS for the tier list wrapper */
  .tier-list-wrapper {
    background-color: #0F2734;
    color: #F7FAFC;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
  }

  .tier-list-wrapper .tier-list-container {
    max-width: 900px;
    margin: 0 auto;
    text-align: center;
  }

  .tier-list-wrapper .tier-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 10px;
  }

  .tier-list-wrapper .tier {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;
    padding: 6px;
    border: 1px solid #34C3F0;
    border-radius: 4px;
    background-color: rgba(52, 195, 240, 0.1);
  }

  .tier-list-wrapper .tier-label {
    font-size: 1em;
    font-weight: bold;
    color: #0F2734;
    text-align: left;
    padding: 8px;
    border-radius: 4px;
    position: relative;
    z-index: 1;
    flex-shrink: 0;
  }

  /* Background colors for each tier label */
  .tier-list-wrapper .tier[data-tier="S"] .tier-label {
    background-color: #ffd2dd; /* S – Top Tier */
  }

  .tier-list-wrapper .tier[data-tier="A"] .tier-label {
    background-color: #fff500; /* A – Tier */
  }

  .tier-list-wrapper .tier[data-tier="B"] .tier-label {
    background-color: #ffde59; /* B – Tier */
  }

  .tier-list-wrapper .tier[data-tier="C"] .tier-label {
    background-color: #00ff8c; /* C – Tier */
  }

  .tier-list-wrapper .tier[data-tier="D"] .tier-label {
    background-color: #a4ebcb; /* D – Tier */
  }

  .tier-list-wrapper .tier[data-tier="F"] .tier-label {
    background-color: #00c6ff; /* F – Worst Tier */
  }

  .tier-list-wrapper .tier-images {
    display: flex;
    gap: 4px;
    flex-wrap: wrap;
    position: relative;
    z-index: 0;
    flex-grow: 1;
  }

  .tier-list-wrapper .tier-images img {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 4px;
    cursor: grab;
    transition: transform 0.2s ease-in-out;
  }

  .tier-list-wrapper .tier-images img:active {
    cursor: grabbing;
    transform: scale(1.1);
  }

  .tier-list-wrapper .action-buttons {
    margin-bottom: 15px;
    display: flex;
    gap: 8px;
    justify-content: center;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
  }

  .tier-list-wrapper .action-buttons button,
  .tier-list-wrapper .upload-button {
    padding: 8px 16px;
    background-color: #34C3F0;
    color: #0F2734;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease;
    font-family: Arial, sans-serif;
  }

  .tier-list-wrapper .upload-button {
    background-color: #0F2734;
    color: #F7FAFC;
    padding: 10px 18px;
  }

  .tier-list-wrapper .upload-button:hover,
  .tier-list-wrapper .action-buttons button:hover {
    background-color: #2aa3d6;
  }

  .tier-list-wrapper .action-buttons i {
    margin-right: 6px;
  }

  .tier-list-wrapper #save-status {
    margin-top: 8px;
    color: #34C3F0;
  }

  .tier-list-wrapper #upload-file-button {
    font-size: 14px;
  }

  /* Image Pool Styling */
  .tier-list-wrapper #image-pool {
    margin-bottom: 20px;
    padding: 10px;
    border: 1px dashed #34C3F0;
    border-radius: 4px;
    background-color: rgba(52, 195, 240, 0.05);
  }

  .tier-list-wrapper #image-pool h3 {
    margin: 0 0 10px 0;
    font-size: 1.2em;
    color: #F7FAFC;
  }

  /* Mobile Responsiveness */
  @media (max-width: 600px) {
    .tier-list-wrapper .tier-label {
      font-size: 0.9em; /* Smaller font size for mobile */
      padding: 6px;
    }

    .tier-list-wrapper .tier-images img {
      width: 50px; /* Smaller images for mobile */
      height: 50px;
    }

    .tier-list-wrapper .action-buttons button,
    .tier-list-wrapper .upload-button {
      padding: 6px 12px; /* Smaller buttons for mobile */
      font-size: 12px;
    }
  }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Initialize SortableJS for tiers and image pool
    const tiers = document.querySelectorAll('.tier-list-wrapper .tier-images');
    const imagePool = document.querySelector('.tier-list-wrapper #image-pool .tier-images');

    // Make image pool sortable
    new Sortable(imagePool, {
      group: 'tier-list',
      animation: 150,
      ghostClass: 'ghost',
    });

    // Make tiers sortable
    tiers.forEach(tier => {
      new Sortable(tier, {
        group: 'tier-list',
        animation: 150,
        ghostClass: 'ghost',
        onEnd: function () {
          saveTierList(); // Save tier list when items are rearranged
        }
      });
    });

    // Handle file upload button
    const uploadButton = document.querySelector('.tier-list-wrapper #upload-file-button');
    const uploadInput = document.querySelector('.tier-list-wrapper #upload-file');
    uploadButton.addEventListener('click', function () {
      uploadInput.click();  // Trigger file input when button is clicked
    });

    uploadInput.addEventListener('change', function (event) {
      const files = event.target.files;
      if (files.length > 0) {
        uploadButton.innerText = "File Chosen";  // Change text to "File Chosen"
        for (const file of files) {
          const reader = new FileReader();
          reader.onload = function (e) {
            const img = document.createElement('img');
            img.src = e.target.result;
            imagePool.appendChild(img); // Add image to the image pool
            saveTierList(); // Save tier list when images are uploaded
          };
          reader.readAsDataURL(file);
        }
      } else {
        uploadButton.innerText = "Choose File";  // Default text when no file is chosen
      }
    });

    // Reset tier list
    document.querySelector('.tier-list-wrapper #reset-tier-list').addEventListener('click', function () {
      document.querySelectorAll('.tier-list-wrapper .tier-images').forEach(tier => {
        tier.innerHTML = ''; // Clear all images
      });
      imagePool.innerHTML = ''; // Clear image pool
      uploadButton.innerText = "Choose File"; // Reset button text
      saveTierList(); // Save tier list after reset
    });

    // Download tier list as image
    document.querySelector('.tier-list-wrapper #download-tier-list').addEventListener('click', function () {
      html2canvas(document.querySelector('.tier-list-wrapper .tier-list'), {
        backgroundColor: '#0F2734'  // Set the background color to #0F2734
      }).then(canvas => {
        const context = canvas.getContext('2d');
        
        // Add diagonal watermark
        context.font = '30px Arial';
        context.fillStyle = '#283A42';  // Watermark color
        context.textAlign = 'center';
        context.textBaseline = 'middle';
        
        // Set watermark text at an angle (top-left to bottom-right)
        context.save();
        context.translate(0, 0);  // Start from top-left
        context.rotate(Math.PI / 4);  // Rotate 45 degrees (diagonal from top-left to bottom-right)
        context.fillText('megatierlist.com/tier-list-maker/', 50, 50); // Adjust position as needed
        context.restore();

        const link = document.createElement('a');
        link.download = 'tier-list.png';
        link.href = canvas.toDataURL();
        link.click();
      });
    });

    // Function to save tier list data to the backend
    async function saveTierList() {
      const tierListData = {
        timestamp: new Date().toISOString(),
        tiers: []
      };

      // Extract tier list data
      document.querySelectorAll('.tier-list-wrapper .tier').forEach(tier => {
        const tierLabel = tier.querySelector('.tier-label').innerText;
        const images = Array.from(tier.querySelectorAll('.tier-images img')).map(img => img.src);
        tierListData.tiers.push({
          label: tierLabel,
          images: images
        });
      });

      // Send data to the backend
      try {
        const response = await fetch('/api/saveTierList', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(tierListData),
        });

        if (!response.ok) {
          console.error('Failed to save tier list');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }
  });
</script>